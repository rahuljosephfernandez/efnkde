(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     22399,        574]
NotebookOptionsPosition[     21504,        550]
NotebookOutlinePosition[     21995,        568]
CellTagsIndexPosition[     21952,        565]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["About the Code", "Subsection",
 CellChangeTimes->{{3.87540127157174*^9, 
  3.875401291174081*^9}},ExpressionUUID->"47c88c57-fa56-4a3f-8fdd-\
8c82b0669b5b"],

Cell["\<\
\[OpenCurlyDoubleQuote]PointArr\[CloseCurlyDoubleQuote] is the array carrying \
the input data (spatial distribution of points). The same used in the code \
below is only a place holder and does not correspond to the data used in the \
paper for generating any of the graphs.
If the data is given in terms of latitudes and longitudes, then a conversion \
to 2D Cartesian form is needed before using the below code.
If there are forbidden regions, then the corners of the polygon mentioned in \
Section 9 of the manuscript are to be entered in \
\[OpenCurlyDoubleQuote]BoundaryArray\[CloseCurlyDoubleQuote]. If there are no \
forbidden regions, then uncomment the line \
\[OpenCurlyDoubleQuote]BoundaryArray={};\[CloseCurlyDoubleQuote] in the code \
below.
The function EFNKDE[x, y, BW] returns K(x, y) with bandwidth BW.\
\>", "Text",
 CellChangeTimes->{{3.8754010447172737`*^9, 3.8754012145762043`*^9}, {
   3.875401325638928*^9, 3.875401411765531*^9}, {3.875402263747191*^9, 
   3.875402301424087*^9}, 
   3.875402449177957*^9},ExpressionUUID->"dc63ff1a-1763-40ff-aaff-\
239ebdeb900c"],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{
  Inherited, 5},ExpressionUUID->"2482abfe-02e9-424e-b252-7052a6aeea82"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Subsection",
 CellChangeTimes->{{3.875401296574532*^9, 
  3.875401305430628*^9}},ExpressionUUID->"939b114e-d8ee-4f54-ba23-\
dbc9cac10b37"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PointArr", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"4.17", ",", "4.29"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.22", ",", "9.19"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6.94"}], ",", "2.41"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "7.18"}], ",", "5.15"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.78"}], ",", "1.56"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5.31"}], ",", "0.04"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.37", ",", "9.44"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BoundaryArray", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.0"}], ",", 
        RowBox[{"-", "2.0"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.0", ",", 
        RowBox[{"-", "2.0"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.0", ",", "2.0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.0"}], ",", "2.0"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"BoundaryArray", "=", 
     RowBox[{"{", "}"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nPArr", "=", 
   RowBox[{"Length", "[", "PointArr", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DelaunayTriangulatePlot", "=", 
   RowBox[{"DelaunayMesh", "[", "PointArr", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AllEdgeList1", "=", 
    RowBox[{
     RowBox[{"MeshCells", "[", 
      RowBox[{"DelaunayTriangulatePlot", ",", "1"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindabcGivenPts", "[", 
    RowBox[{"x1_", ",", "y1_", ",", "x2_", ",", "y2_"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y2", "-", "y1"}], ",", 
     RowBox[{"x1", "-", "x2"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x2", "-", "x1"}], ")"}], "y2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y1", "-", "y2"}], ")"}], "x2"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindIntrsctnPtGivenLines", "[", 
    RowBox[{
    "a1_", ",", "b1_", ",", "c1_", ",", "a2_", ",", "b2_", ",", "c2_"}], 
    "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"b2", " ", "c1"}], "-", 
       RowBox[{"b1", " ", "c2"}]}], 
      RowBox[{
       RowBox[{"a2", " ", "b1"}], "-", 
       RowBox[{"a1", " ", "b2"}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"a1", " ", "c2"}], "-", 
       RowBox[{"a2", " ", "c1"}]}], 
      RowBox[{
       RowBox[{"a2", " ", "b1"}], "-", 
       RowBox[{"a1", " ", "b2"}]}]]}], "}"}]}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindIfPtInt", "[", 
     RowBox[{"PtA_", ",", "PtB_", ",", "PtX_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "xA", ",", "xB", ",", "xX", ",", "yA", ",", "yB", ",", "yX", ",", 
        "\[Alpha]IntExt", ",", "IntAns"}], "}"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"xA", "=", 
        RowBox[{"PtA", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"xB", "=", 
        RowBox[{"PtB", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"xX", "=", 
        RowBox[{"PtX", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"yA", "=", 
        RowBox[{"PtA", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"yB", "=", 
        RowBox[{"PtB", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"yX", "=", 
        RowBox[{"PtX", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"xA", "==", "xB"}], ",", 
         RowBox[{"\[Alpha]IntExt", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"yX", "-", "yA"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"yB", "-", "yA"}], ")"}]}]}], ",", 
         RowBox[{"\[Alpha]IntExt", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"xX", "-", "xA"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"xB", "-", "xA"}], ")"}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Alpha]IntExt", ">", "0"}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{"\[Alpha]IntExt", "<", "1"}], ")"}]}], ",", 
         RowBox[{"IntAns", "=", "1"}], ",", 
         RowBox[{"IntAns", "=", "0"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "IntAns"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RemoveOverlapWithBoundary", "[", "BArr_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "NB", ",", "BArrTmp", ",", "RemoveCrossTalksArr", ",", "iK", ",", 
        "Edgeval", ",", "a", ",", "b", ",", "Coorda", ",", "Coordb", ",", 
        "iB", ",", "Coordc", ",", "Coordd", ",", "abcEdge", ",", 
        "abcBoundary", ",", "IntPt"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"BArrTmp", "=", "BArr"}], ";", "\[IndentingNewLine]", 
       RowBox[{"NB", "=", 
        RowBox[{"Length", "[", "BArr", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"BArrTmp", ",", 
         RowBox[{"BArr", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"RemoveCrossTalksArr", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"iK", "=", "1"}], ",", 
         RowBox[{"iK", "<=", 
          RowBox[{"Length", "[", "AllEdgeList1", "]"}]}], ",", 
         RowBox[{"iK", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Edgeval", "=", 
           RowBox[{"AllEdgeList1", "[", 
            RowBox[{"[", "iK", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"a", "=", 
           RowBox[{"Edgeval", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"b", "=", 
           RowBox[{"Edgeval", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Coorda", "=", 
           RowBox[{"PointArr", "[", 
            RowBox[{"[", "a", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Coordb", "=", 
           RowBox[{"PointArr", "[", 
            RowBox[{"[", "b", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"abcEdge", "=", 
           RowBox[{"FindabcGivenPts", "[", 
            RowBox[{
             RowBox[{"Coorda", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Coorda", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"Coordb", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Coordb", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"iB", "=", "1"}], ",", 
            RowBox[{"iB", "<=", "NB"}], ",", 
            RowBox[{"iB", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Coordc", "=", 
              RowBox[{"BArrTmp", "[", 
               RowBox[{"[", "iB", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             
             RowBox[{"Coordd", "=", 
              RowBox[{"BArrTmp", "[", 
               RowBox[{"[", 
                RowBox[{"iB", "+", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"abcBoundary", "=", 
              RowBox[{"FindabcGivenPts", "[", 
               RowBox[{
                RowBox[{"Coordc", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"Coordc", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"Coordd", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"Coordd", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"IntPt", "=", 
              RowBox[{"FindIntrsctnPtGivenLines", "[", 
               RowBox[{
                RowBox[{"abcEdge", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"abcEdge", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"abcEdge", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", 
                RowBox[{"abcBoundary", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"abcBoundary", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"abcBoundary", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"FindIfPtInt", "[", 
                   RowBox[{"Coorda", ",", "Coordb", ",", "IntPt"}], "]"}], "==",
                   "1"}], ")"}], "&&", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"FindIfPtInt", "[", 
                   RowBox[{"Coordc", ",", "Coordd", ",", "IntPt"}], "]"}], "==",
                   "1"}], ")"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"RemoveCrossTalksArr", ",", "Edgeval"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"iB", "=", 
                 RowBox[{"NB", "+", "10"}]}], ";"}]}], "\[IndentingNewLine]", 
              "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AllEdgeList1", "=", 
        RowBox[{"Complement", "[", 
         RowBox[{"AllEdgeList1", ",", "RemoveCrossTalksArr"}], "]"}]}], 
       ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "BoundaryArray", "]"}], ">", "0"}], ",", 
     RowBox[{"RemoveOverlapWithBoundary", "[", "BoundaryArray", "]"}]}], 
    "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nAllEdgeList1", "=", 
    RowBox[{"Length", "[", "AllEdgeList1", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IntInfoGivenEdgePT", "[", 
     RowBox[{"x_", ",", "y_", ",", "iEdge_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "PtX", ",", "ipta", ",", "iptb", ",", "Pta", ",", "Ptb", ",", "VXma", 
        ",", "VXmb", ",", "Vbma", ",", "VXmaDOTVbma", ",", "VXmbDOTVamb", ",",
         "FootOfThePerpendicular", ",", "LengthOfPerp", ",", "yA", ",", 
        "yB"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PtX", "=", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ipta", "=", 
        RowBox[{"AllEdgeList1", "[", 
         RowBox[{"[", 
          RowBox[{"iEdge", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"iptb", "=", 
        RowBox[{"AllEdgeList1", "[", 
         RowBox[{"[", 
          RowBox[{"iEdge", ",", "2"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Pta", "=", 
        RowBox[{"PointArr", "[", 
         RowBox[{"[", "ipta", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Ptb", "=", 
        RowBox[{"PointArr", "[", 
         RowBox[{"[", "iptb", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"VXma", "=", 
        RowBox[{"PtX", "-", "Pta"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"VXmb", "=", 
        RowBox[{"PtX", "-", "Ptb"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Vbma", "=", 
        RowBox[{"Ptb", "-", "Pta"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"VXmaDOTVbma", "=", 
        RowBox[{"VXma", ".", "Vbma"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"VXmbDOTVamb", "=", 
        RowBox[{"VXmb", ".", 
         RowBox[{"(", 
          RowBox[{"-", "Vbma"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"FootOfThePerpendicular", "=", 
        RowBox[{"Pta", "+", 
         RowBox[{
          FractionBox["VXmaDOTVbma", 
           RowBox[{"Vbma", ".", "Vbma"}]], "Vbma"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"LengthOfPerp", "=", 
        RowBox[{"Norm", "[", 
         RowBox[{"PtX", "-", "FootOfThePerpendicular"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"VXmaDOTVbma", "\[LessEqual]", "0"}], ",", 
         RowBox[{"yA", "=", 
          RowBox[{"Norm", "[", 
           RowBox[{"Pta", "-", "FootOfThePerpendicular"}], "]"}]}]}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"VXmbDOTVamb", "\[LessEqual]", "0"}], ",", 
         RowBox[{"yA", "=", 
          RowBox[{"Norm", "[", 
           RowBox[{"Ptb", "-", "FootOfThePerpendicular"}], "]"}]}]}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"VXmaDOTVbma", ">", "0"}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{"VXmbDOTVamb", ">", "0"}], ")"}]}], ",", 
         RowBox[{"yA", "=", 
          RowBox[{"-", 
           RowBox[{"Norm", "[", 
            RowBox[{"Pta", "-", "FootOfThePerpendicular"}], "]"}]}]}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"yB", "=", 
        RowBox[{"yA", "+", 
         RowBox[{"Norm", "[", "Vbma", "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"LengthOfPerp", ",", "yA", ",", "yB"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PartialEFNKDE", "[", 
     RowBox[{"x_", ",", "y_", ",", "BW_", ",", "iEdgeEF_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "IntInfoval", ",", "sval", ",", "yAval", ",", "yBval", ",", "LEdgeval",
         ",", "Expval", ",", "Denomval", ",", "erfsval", ",", "AnsvalEF"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"IntInfoval", "=", 
        RowBox[{"IntInfoGivenEdgePT", "[", 
         RowBox[{"x", ",", "y", ",", "iEdgeEF"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"sval", "=", 
        RowBox[{"IntInfoval", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"yAval", "=", 
        RowBox[{"IntInfoval", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"yBval", "=", 
        RowBox[{"IntInfoval", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"LEdgeval", "=", 
        RowBox[{"yBval", "-", "yAval"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Expval", "=", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["sval", "BW"], ")"}], "2"]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Denomval", "=", 
        RowBox[{"2", 
         SqrtBox[
          RowBox[{"2", "\[Pi]"}]], "nAllEdgeList1", " ", "BW", " ", 
         "LEdgeval"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"erfsval", "=", 
        RowBox[{
         RowBox[{"Erf", "[", 
          FractionBox["yBval", 
           RowBox[{
            SqrtBox["2"], " ", "BW"}]], "]"}], "-", 
         RowBox[{"Erf", "[", 
          FractionBox["yAval", 
           RowBox[{
            SqrtBox["2"], " ", "BW"}]], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"AnsvalEF", "=", 
        FractionBox[
         RowBox[{"Expval", "*", "erfsval"}], "Denomval"]}], ";", 
       "\[IndentingNewLine]", "AnsvalEF"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EFNKDE", "[", 
    RowBox[{"x_", ",", "y_", ",", "BW_"}], "]"}], ":=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"PartialEFNKDE", "[", 
      RowBox[{"x", ",", "y", ",", "BW", ",", "j"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "nAllEdgeList1"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.809417820785782*^9, {3.8094178509743433`*^9, 3.809417852483762*^9}, {
   3.809418093642385*^9, 3.809418143980595*^9}, {3.80941840756736*^9, 
   3.809418457599587*^9}, {3.809419607738015*^9, 3.809419712776854*^9}, {
   3.809419761873251*^9, 3.8094198312745123`*^9}, {3.8094198765408363`*^9, 
   3.809419911920576*^9}, {3.809419954017762*^9, 3.809419959707251*^9}, {
   3.809419992872867*^9, 3.809419997153899*^9}, {3.809433643012525*^9, 
   3.809433643822659*^9}, {3.8094337159242907`*^9, 3.809433784003409*^9}, {
   3.809438379157205*^9, 3.809438381747375*^9}, {3.841282019242506*^9, 
   3.841282140711051*^9}, 3.841282186718042*^9, {3.849957106535676*^9, 
   3.849957136695773*^9}, {3.849960221679968*^9, 3.8499602342801228`*^9}, {
   3.849960267564529*^9, 3.849960481028338*^9}, 3.875399280969884*^9, {
   3.875399382221648*^9, 3.875399385074479*^9}, {3.87539942586952*^9, 
   3.875399535785532*^9}, {3.875399578877397*^9, 3.875399594929308*^9}, {
   3.875399746232953*^9, 3.875399752773183*^9}, {3.875399802396617*^9, 
   3.875399882626389*^9}, {3.875399917477674*^9, 3.875399967931929*^9}, {
   3.875399998758165*^9, 3.875400041475174*^9}, {3.8754003828654337`*^9, 
   3.875400459436883*^9}, {3.875400504830974*^9, 3.875400513154469*^9}, {
   3.8754005565569563`*^9, 3.875400638757794*^9}, {3.8754007687566147`*^9, 
   3.875400828864581*^9}, {3.875400924430222*^9, 3.875400971396618*^9}, {
   3.875401011779953*^9, 3.875401039959083*^9}, {3.875401255118835*^9, 
   3.8754012558747873`*^9}, {3.875402792688023*^9, 3.87540280943854*^9}, 
   3.8754031189598207`*^9, 3.875403291333905*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"a445c821-9199-4e0c-8212-819c70d554aa"]
}, Open  ]]
},
WindowSize->{1920, 972},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.5, 1.5 Inherited],
FrontEndVersion->"13.1 for Mac OS X ARM (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f42c278e-7e15-4628-b273-185a3253ec97"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 161, 3, 121, "Subsection",ExpressionUUID->"47c88c57-fa56-4a3f-8fdd-8c82b0669b5b"],
Cell[743, 27, 1097, 19, 383, "Text",ExpressionUUID->"dc63ff1a-1763-40ff-aaff-239ebdeb900c"],
Cell[1843, 48, 329, 10, 22, "Text",ExpressionUUID->"2482abfe-02e9-424e-b252-7052a6aeea82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2209, 63, 152, 3, 121, "Subsection",ExpressionUUID->"939b114e-d8ee-4f54-ba23-dbc9cac10b37"],
Cell[2364, 68, 19124, 479, 4735, "Input",ExpressionUUID->"a445c821-9199-4e0c-8212-819c70d554aa"]
}, Open  ]]
}
]
*)

